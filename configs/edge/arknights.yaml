module:
  target: models.enet.enet.EdgeNet
  params:
    in_channels: 3
    in_res: 512
    loss_config:
      target: modules.loss.edge_perceptual.EdgePerceptualLoss
      params:
        l1_weight: 0.5
        perceptual_weight: 1.0
        g_weight: 0.5
        d_weight: 1.0
        disc_iter_start: 20001
        disc_config:
          in_channels: 4
          in_res: 512
          hidden_dims: [16, 32, 64]
          window_size: 8
          num_heads: 8
          mlp_ratio: 4
          dropout: 0.0
          attn_dropout: 0.0
          drop_path: 0.0
          qkv_bias: True
          bias: True
          act: 'gelu'
          dim: 2
          use_checkpoint: True

    window_size: 8
    out_channels: 1
    hidden_dims: [16, 32, 64, 96]
    embed_dim: 8
    attn_res: [0, 1, 2, 3]
    num_blocks: 3
    num_heads: 8
    mlp_ratio: 4
    dropout: 0.0
    attn_dropout: 0.0
    drop_path: 0.0
    qkv_bias: True
    bias: True
    groups: 8
    act: 'gelu'
    use_conv: True
    pool_type: 'max'
    mode: 'nearest'
    lr: [2e-5, 1e-4]
    weight_decay: [1e-4, 1e-4]
    lr_decay_epoch: 100
    dim: 2
    use_checkpoint: True
    use_fp16: False
    log_interval: 20
    accum_grad_batches: 2
    # ckpt_path: './checkpoints/edgenet/arknights/edgenet.ckpt'

data:
  target: modules.datasets.util.DataModuleFromConfig
  params:
    num_workers: 4
    batch_size: 1
    wrap: True
    train:
      target: modules.datasets.arknights.ArknightsDataset
      params:
        root: '/local_datasets/arknights'
        # root: './datasets/arknights'
        train: True
        transform_configs:
          transforms:
            - target: torchvision.transforms.transforms.ToTensor
            - target: torchvision.transforms.transforms.Resize
              params:
                size: [ 512, 512 ]
    validation:
      target: modules.datasets.arknights.ArknightsDataset
      params:
        root: '/local_datasets/arknights'
        # root: './datasets/arknights'
        train: False
        transform_configs:
          transforms:
            - target: torchvision.transforms.transforms.ToTensor
            - target: torchvision.transforms.transforms.Resize
              params:
                size: [ 512, 512 ]

logger:
  target: pytorch_lightning.loggers.tensorboard.TensorBoardLogger
  params:
    save_dir: './logs'
    name: 'edgenet'
    version: 'arknights'


checkpoints:
  latest_checkpoint:
    target: pytorch_lightning.callbacks.ModelCheckpoint
    params:
      dirpath: './checkpoints/edgenet/arknights'
      filename: 'edgenet'
      monitor: 'step'
      mode: 'max'
      save_top_k: 1

trainer:
  accelerator: 'gpu'
  max_epochs: 200